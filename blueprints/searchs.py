from vkbottle.bot import Blueprint
from wikipedia import set_lang, summary
from youtubesearchpython import Search

from config import http_client

bp = Blueprint("SearchInfo")
bp.labeler.vbml_ignore_case = True


@bp.on.message(text='–≤–∏–∫–∏ <text>')
async def wikipedia_search(_, text):

    try:
        set_lang("ru")
        return f'üîç –í–æ—Ç —á—Ç–æ –ø–æ–ª—É—á–∏–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É {text}:\n{summary(text)}'

    except:
        return f"ü§® –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–ª–æ—Å—å!"


@bp.on.message(text='–ø–æ–≥–æ–¥–∞ <uid>')
async def weather(_, uid):

    response = await http_client.request_json(
        f"http://api.openweathermap.org/data/2.5/weather?q={uid}"
        "&lang=ru&appid=cdffd7f507a7cbc8c4cba574f41201c0",
        "get"
    )

    temp_max = response["main"]["temp_max"]
    temp_min = response["main"]["temp_min"]

    try:
        return (
            f'üåè –ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ {response["name"]}:'
            f'\n‚Ä¢ üìÉ –û–ø–∏—Å–∞–Ω–∏–µ: {response["weather"][0]["description"]}'
            f'\n‚Ä¢ üìä –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {round(response["main"]["temp"] - 273)}¬∞C '
            f'(–ú–∏–Ω {round(temp_min - 273)}¬∞C, –ú–∞–∫—Å: {round(temp_max - 273)}¬∞C)'
            f'\n‚Ä¢ üí¶ –í–ª–∞–∂–Ω–æ—Å—Ç—å: {response["main"]["humidity"]}%'
            f'\n‚Ä¢ üå§ –û–±–ª–∞—á–Ω–æ—Å—Ç—å: {response["clouds"]["all"]}%'
        )

    except:
        return f'üåé –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.\n‚Ä¢ –£–∫–∞–∑–∞–Ω–Ω—ã–π –≤–∞–º–∏ –≥–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω.'


@bp.on.message(text=['–∫–æ–≤–∏–¥', '–∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å'])
async def covid_get(_):

    latest = (
        await http_client.request_json("https://coronavirus-tracker-api.herokuapp.com/v2/latest", "get")
    )["latest"]

    return (
        f"üò∑ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–µ –≤ –º–∏—Ä–µ:\n"
        f"–ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ —Å–ª—É—á–∞–µ–≤: {latest['confirmed']:,}\n"
        f"–°–º–µ—Ä—Ç–µ–π: {latest['deaths']:,}\n–í—ã–∑–¥–æ—Ä–æ–≤–µ–ª–∏: {latest['recovered']:,}"
    )


@bp.on.message(text="–∞–π–ø–∏ <ip>")
async def get_ip(_, ip):

    result = await http_client.request_json(
        f"http://api.ipapi.com/{ip}?access_key=2ca3e35c4557cd2ad78568f350f5ea39&language=ru&output=json",
        "get"
    )

    return (
        f"‚úÖ –í–æ—Ç —á—Ç–æ –º–Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ –¥–∞–Ω–Ω–æ–º—É IP-–∞–¥—Ä–µ—Å—É:\n\n"
        f"IP-–∞–¥—Ä–µ—Å: {result['ip']}\n"
        f"–¢–∏–ø: {result['type']}\n"
        f"–ö–æ–Ω—Ç–∏–Ω–µ–Ω—Ç: {result['continent_name']}\n\n"
        f"–ö–æ–¥ —Å—Ç—Ä–∞–Ω—ã: {result['country_code']}\n"
        f"–°—Ç—Ä–∞–Ω–∞: {result['country_name']} {result['location']['country_flag_emoji']}\n"
        f"–†–µ–≥–∏–æ–Ω: {result['region_name']}\n"
        f"–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –≤ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞—Ö: {result['latitude']}, {result['longitude']}\n\n"
        f"–ò–Ω–¥–µ–∫—Å –≥–æ—Ä–æ–¥–∞: {result['zip']}\n"
        f"–¢–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π –∫–æ–¥: {result['location']['calling_code']}"
    )


@bp.on.message(text='–≤–∏–¥–µ–æ <text>')
async def video(_, text):

    videosSearch = Search(text, limit=1)
    response = videosSearch.result()
    viev_count = response['result'][0]['viewCount']['text'].replace('views', '')

    return (
        f"üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ: {response['result'][0]['link']}\n‚è± –î–ª–∏–Ω–Ω–∞ –≤–∏–¥–µ–æ: "
        f"{response['result'][0]['duration']}\n"
        f"üñº –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞: {response['result'][0]['channel']['name']}"
        f"\nüî• –ù–∞–∑–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ: {response['result'][0]['title']}\n"
        f"üåç –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤: {viev_count}"
    )
