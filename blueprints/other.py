from vkbottle.bot import Blueprint
from random import randint, choice

from config import http_client

bp = Blueprint("OtherCommands")
bp.labeler.vbml_ignore_case = True


@bp.on.message(text="—Ä–∞–Ω–¥–æ–º <number:int> <number_two:int>")
async def bones(_, number, number_two):

    if number > number_two:
        return "üì† –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–∞ —Ç–∞–∫, —á—Ç–æ–±—ã –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ –Ω–µ –±—ã–ª–æ –±–æ–ª—å—à–µ –≤—Ç–æ—Ä–æ–≥–æ."

    return f"üì† –í–∞—à–µ —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ: {randint(number, number_two):,}"


@bp.on.message(text=["–≤—Ä–µ–º—è", "–¥–∞—Ç–∞"])
async def time_get(_):

    now = await http_client.request_text("https://isdayoff.ru/now", "get")
    return f"üìÜ {now}"


@bp.on.message(text="–º–æ–Ω–µ—Ç–∫–∞")
async def coin(_):

    return f"‚úä –í–∞–º –≤—ã–ø–∞–ª–æ: {choice(['—Ä–µ—à–∫–∞', '–æ—Ä—ë–ª'])}"


@bp.on.message(text="–≥–æ–¥ <year:int>")
async def isleap(_, year: int):

    result = "–≤–∏—Å–æ–∫–æ—Å–Ω—ã–π" if year % 4 == 0 else "–Ω–µ –≤–∏—Å–æ–∫–æ—Å–Ω—ã–π"
    return f"üìô –ì–æ–¥ {year} {result}"
